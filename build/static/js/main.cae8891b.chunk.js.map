{"version":3,"sources":["Components/Classes/Flowchart.jpg","Components/Layouts/Header.js","Components/Layouts/Footer.js","Components/Home/CalendarComponent.js","Components/Home/UserInfo.js","Components/Home/Home.js","Components/AboutMe/AboutMe.js","Components/Schedule/Schedule.js","Components/Classes/DegreePlan.js","Components/Classes/Classes.js","Components/Help/Help.js","Components/Signout/Signout.js","Components/App.js","serviceWorker.js","index.js"],"names":["module","exports","Header","Navbar","collapseOnSelect","expand","bg","variant","Brand","href","Toggle","aria-controls","Collapse","id","Nav","className","Link","Component","CalendarComponent","state","Card","generalStyle","maxWidth","margin","backgroundColor","height","overflow","light","UserInfo","props","utaID","firstName","lastName","major","yearAttend","this","Home","Container","Row","Col","xs","AboutMe","Schedule","DegreePlan","Image","src","Img","fluid","Classes","Tabs","defaultActiveKey","Tab","eventKey","title","Help","Signout","App","path","exact","component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.cae8891b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Flowchart.bc06777d.jpg\";","import React from 'react';\r\nimport Navbar from 'react-bootstrap/Navbar';\r\nimport Nav from 'react-bootstrap/Nav';\r\n\r\nfunction Header() {\r\n  \r\n  return (\r\n    <Navbar collapseOnSelect expand=\"lg\" bg=\"primary\" variant=\"dark\">\r\n    <Navbar.Brand href=\"/\">We Advise</Navbar.Brand>\r\n    <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n        <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n            <Nav className=\"mr-auto\">\r\n                <Nav.Link href=\"/\">Home</Nav.Link>\r\n                <Nav.Link href=\"/classes\">Classes</Nav.Link>\r\n                <Nav.Link href=\"/schedule\">Schedule Appointment</Nav.Link>\r\n                <Nav.Link href=\"/aboutme\">About Me</Nav.Link>\r\n                \r\n            </Nav>\r\n            <Nav>\r\n                <Nav.Link href=\"/help\">Help</Nav.Link>\r\n                <Nav.Link href=\"/signout\">Sign Out</Nav.Link>\r\n            </Nav>\r\n        </Navbar.Collapse>\r\n    </Navbar>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import React, { Component } from 'react';\r\n\r\nclass Footer extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {  }\r\n    }\r\n    render() { \r\n        return ( <h1>Footer</h1> );\r\n    }\r\n}\r\n \r\nexport default Footer;","import React, { Component } from 'react';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Calendar from \"react-material-ui-calendar\";\r\n\r\nclass CalendarComponent extends Component {\r\n    state = {  }\r\n    render() { \r\n        return (\r\n            <Card>\r\n                <Calendar\r\n                    generalStyle={{\r\n                        maxWidth: \"100%\",\r\n                        margin: \"0 auto\",\r\n                        backgroundColor: \"rgba(256,256,256,1)\",\r\n                        height: \"100%\",\r\n                        overflow: \"auto\"\r\n                    }}\r\n                    light={true}\r\n                />\r\n            </Card>\r\n        );\r\n    }\r\n}\r\n \r\nexport default CalendarComponent;","import React, { Component } from 'react';\r\n\r\n\r\nclass UserInfo extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            utaID: 0,\r\n            firstName: \"John\",\r\n            lastName: \"Smith\",\r\n            major: \"Computer Science\",\r\n            yearAttend: \"2016\",\r\n        }\r\n    }\r\n    render() { \r\n        return (\r\n            <div className=\"card h-100\">\r\n                <h4 className=\"card-header\">My Information</h4>\r\n                <div className=\"card-body\">\r\n                    <p className=\"card-text\">Name: {this.state.firstName+\" \"+this.state.lastName}</p>\r\n                    <p className=\"card-text\">Major: {this.state.major}</p>\r\n                    <p className=\"card-text\">Year: {this.state.yearAttend}</p>\r\n                </div>\r\n                <div className=\"card-footer\">\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n \r\nexport default UserInfo;","import React from 'react';\r\nimport './Home.css';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport CalendarComponent from './CalendarComponent';\r\nimport UserInfo from './UserInfo';\r\nimport Card from 'react-bootstrap/Card'\r\n\r\nfunction Home() {\r\n  return (\r\n    <div className=\"Home\">]\r\n    <Container>\r\n      <Row>\r\n        <Col>\r\n          <UserInfo />\r\n        </Col>\r\n \r\n        <Col xs={6}>\r\n          <CalendarComponent />\r\n        </Col>\r\n        <Col>\r\n          <Card>\r\n            <h4 className=\"card-header\"> Advisor Info</h4>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n\r\n\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","import React from 'react';\r\n\r\nfunction AboutMe() {\r\n  return (\r\n    <div className=\"AboutMe\">\r\n      <h1>AboutMe Page</h1>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AboutMe;\r\n","import React from 'react';\r\n\r\nfunction Schedule() {\r\n  return (\r\n    <div className=\"Schedule\">\r\n      <h1>Schedule Page</h1>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Schedule;\r\n","import React, { Component }from 'react';\r\nimport Image from 'react-bootstrap/Image';\r\nimport Img from './Flowchart.jpg';\r\n\r\nclass DegreePlan extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {  }\r\n    }\r\n    render() { \r\n        return (\r\n            <div className=\"container\">\r\n                <Image src={Img} fluid/>\r\n            </div> \r\n            \r\n        );\r\n    }\r\n}\r\n \r\nexport default DegreePlan;","import React from 'react';\r\nimport DegreePlan from './DegreePlan';\r\nimport Tabs from 'react-bootstrap/Tabs';\r\nimport Tab from 'react-bootstrap/Tab';\r\n\r\nfunction Classes() {\r\n  return (\r\n    <div className=\"Classes\">\r\n      <Tabs defaultActiveKey=\"degreePlan\" id=\"classTab\">\r\n        <Tab eventKey=\"degreePlan\" title=\"Degree Plan\">\r\n          <DegreePlan />\r\n        </Tab>\r\n        <Tab eventKey=\"courseTaken\" title=\"Course Taken\">\r\n        </Tab>\r\n        <Tab eventKey=\"courseNotTaken\" title=\"Course Not Taken\">\r\n        </Tab>\r\n      </Tabs>\r\n      \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Classes;","import React from 'react';\r\n\r\nfunction Help() {\r\n  return (\r\n    <div className=\"Help\">\r\n      <h1>Help Page</h1>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Help;","import React from 'react';\r\n\r\nfunction Signout() {\r\n  return (\r\n    <div className=\"Signout\">\r\n      <h1>Signout Page</h1>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Signout;\r\n","import React from 'react';\r\nimport {Header} from './Layouts';\r\nimport Home from './Home/Home';\r\nimport AboutMe from './AboutMe/AboutMe';\r\nimport Schedule from './Schedule/Schedule';\r\nimport Classes from './Classes/Classes';\r\nimport Help from './Help/Help';\r\nimport Signout from './Signout/Signout';\r\n\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n} from \"react-router-dom\";\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      <div className=\"App\">\r\n        <Header />\r\n        <Switch>\r\n          <Route path='/' exact component={Home} />\r\n          <Route path='/aboutme' component={AboutMe} />\r\n          <Route path='/schedule' component={Schedule} />\r\n          <Route path='/classes' component={Classes} />\r\n          <Route path='/help' component={Help} />\r\n          <Route path='/signout' component={Signout} />\r\n        </Switch>\r\n\r\n      </div>\r\n    </Router>\r\n\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './Components/App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nReactDOM.render(\r\n    <App />,\r\n    document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}